const storage = require('../service/storage');
const { sendMessage, sendLongMessage } = require('../utils/message');

module.exports = async (ctx) => {
    try {
        const trackedOwners = storage.getTrackedOwners();
        
        if (!trackedOwners.length) {
            return await sendMessage(
                ctx,
                'üë• –ù–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤\n\n' +
                '–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤–æ–≥–æ: /trackowner username',
                { parse_mode: 'HTML' }
            );
        }

        let message = 'üë• <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤</b>\n';
        message += '‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n';

        for (const owner of trackedOwners) {
            const ownerData = storage.owners.get(owner);
            const repos = storage.getReposByOwner(owner);
            const activeRepos = repos.filter(([_, repo]) => repo.lastCommitTime).length;
            
            message += `üîπ <b>${owner}</b>\n`;
            message += `   üì¶ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤: ${repos.length} (${activeRepos} –∞–∫—Ç–∏–≤–Ω—ã—Ö)\n`;
            message += `   üìÖ –î–æ–±–∞–≤–ª–µ–Ω: ${new Date(ownerData.addedAt).toLocaleDateString('ru-RU')}\n`;
            message += `   üîç –ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞: ${new Date(ownerData.lastChecked || 0).toLocaleDateString('ru-RU')}\n\n`;
            
            message += `   <code>/untrackowner ${owner}</code> - –£–¥–∞–ª–∏—Ç—å\n`;
            message += '   ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n';
        }

        message += 'üí° <i>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é—Ç—Å—è –≤—Å–µ –Ω–æ–≤—ã–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏</i>';

        await sendLongMessage(ctx, message, { parse_mode: 'HTML' });

    } catch (error) {
        await sendMessage(
            ctx,
            '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤',
            { parse_mode: 'HTML' }
        );
    }
};