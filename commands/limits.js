const { apiRateLimit } = require('../service/github');
const { sendMessage } = require('../utils/message');
const { log, logError } = require('../utils/logger');

function progressBar(used, total) {
    const percent = Math.round((used / total) * 10);
    return `[${'‚ñà'.repeat(percent)}${'‚ñë'.repeat(10 - percent)}]`;
}

module.exports = async (ctx) => {
    try {
        if (!apiRateLimit || typeof apiRateLimit.remaining === 'undefined') {
            throw new Error('–î–∞–Ω–Ω—ã–µ –æ –ª–∏–º–∏—Ç–∞—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
        }

        const resetTime = new Date(apiRateLimit.reset * 1000);
        const timeLeftMinutes = ((apiRateLimit.reset * 1000 - Date.now()) / 60000).toFixed(1);

        const limitTotal = apiRateLimit.limit || 60;
        const remaining = apiRateLimit.remaining || 0;
        const used = limitTotal - remaining;

        const message = `
üìä *–õ–∏–º–∏—Ç—ã GitHub API*

‚ñ∏ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${used}/${limitTotal}
${progressBar(used, limitTotal)} ${Math.round((used/limitTotal)*100)}%
‚ñ∏ –û—Å—Ç–∞–ª–æ—Å—å: ${remaining} –∑–∞–ø—Ä–æ—Å–æ–≤
‚ñ∏ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑: ${timeLeftMinutes} –º–∏–Ω—É—Ç
‚ñ∏ –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${resetTime.toLocaleTimeString('ru-RU')}

‚ÑπÔ∏è *–°–æ–≤–µ—Ç—ã:*
- –î–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤ –¥–æ–±–∞–≤—å—Ç–µ GITHUB_TOKEN –≤ .env
- –ö—Ä–∏—Ç–∏—á–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã: –Ω–µ –±–æ–ª–µ–µ 5/–º–∏–Ω
`;

        await sendMessage(ctx, message, { 
            parse_mode: 'MarkdownV2',
            disable_web_page_preview: true
        });

        log(`–ü—Ä–æ–≤–µ—Ä–µ–Ω—ã –ª–∏–º–∏—Ç—ã API. –û—Å—Ç–∞–ª–æ—Å—å –∑–∞–ø—Ä–æ—Å–æ–≤: ${remaining}`, 'info');

    } catch (error) {
        logError(error, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ª–∏–º–∏—Ç–æ–≤ API');
        await sendMessage(
            ctx,
            `‚ùå –û—à–∏–±–∫–∞: ${error.message}`,
            { parse_mode: 'MarkdownV2' }
        );
    }
};