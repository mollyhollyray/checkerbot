const { sendMessage } = require('../utils/message');
const { log } = require('../utils/logger');

// –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã —Å–ø—Ä–∞–≤–∫–∏
const HELP_TEXTS = {
  main: `
üìö *–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É GitHub Tracker*

üîπ *–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
‚îú /add \\- –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
‚îú /remove \\- —É–¥–∞–ª–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
‚îú /list \\- —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
‚îî /branches \\- –ø–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ç–∫–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è

üîπ *–†–∞–±–æ—Ç–∞ —Å –∫–æ–º–º–∏—Ç–∞–º–∏:*
‚îî /last \\- –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–∏—Ç—ã

üîπ *Pull Requests:*
‚îú /pr \\- —Å–ø–∏—Å–æ–∫ PR
‚îî /prview \\- –¥–µ—Ç–∞–ª–∏ PR

üîπ *–°–∏—Å—Ç–µ–º–∞:*
‚îú /limits \\- –ª–∏–º–∏—Ç—ã API
‚îî /help \\- —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

–î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å–ø—Ä–∞–≤–∫–∏: \`/help [–∫–æ–º–∞–Ω–¥–∞]\`
–ü—Ä–∏–º–µ—Ä: \`/help add\`
  `,

  add: `
üìå *–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–µ /add*

‚ñ´Ô∏è *–§–æ—Ä–º–∞—Ç:* \`/add –≤–ª–∞–¥–µ–ª–µ—Ü/—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π\`
‚ñ´Ô∏è *–ü—Ä–∏–º–µ—Ä:* \`/add facebook/react\`

–î–æ–±–∞–≤–ª—è–µ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ. –ë–æ—Ç –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∫–æ–º–º–∏—Ç–∞—Ö.

‚ö†Ô∏è *–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:*
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—É–±–ª–∏—á–Ω—ã–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ 100 —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
  `,

  last: `
üìå *–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–µ /last*

‚ñ´Ô∏è *–§–æ—Ä–º–∞—Ç:* \`/last –≤–ª–∞–¥–µ–ª–µ—Ü/—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π [–≤–µ—Ç–∫–∞] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]\`
‚ñ´Ô∏è *–ü—Ä–∏–º–µ—Ä—ã:*
\`/last vuejs/core\` \\- 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∫–æ–º–º–∏—Ç–æ–≤
\`/last facebook/react main 3\` \\- 3 –∫–æ–º–º–∏—Ç–∞ –∏–∑ –≤–µ—Ç–∫–∏ main

üîÑ *–ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ:* –ï—Å–ª–∏ –≤–µ—Ç–∫–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–µ—Ç–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  `
};

// –ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã
module.exports = async (ctx) => {
  const command = ctx.message.text.split(' ')[1]?.toLowerCase();

  try {
    if (!command) {
      await sendMainHelp(ctx);
    } else {
      await sendCommandHelp(ctx, command);
    }
    log(`Help shown for: ${command || 'main'}`);
  } catch (error) {
    logError(error, 'Help command failed');
    await sendMessage(ctx, '‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Å–ø—Ä–∞–≤–∫–∏');
  }
};

// –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø—Ä–∞–≤–∫–∏
async function sendMainHelp(ctx) {
  await sendMessage(ctx, HELP_TEXTS.main, {
    parse_mode: 'MarkdownV2',
    disable_web_page_preview: true
  });
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ
async function sendCommandHelp(ctx, command) {
  const helpText = HELP_TEXTS[command] || `
üîç –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ \`${command}\` –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/help\` –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
  `;

  await sendMessage(ctx, helpText, {
    parse_mode: 'MarkdownV2',
    disable_web_page_preview: true
  });
}